#
# Copyright (c) 2010-2012, University of Sussex
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#  * Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
#
#  * Redistributions in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
#  * Neither the name of the University of Sussex nor the names of its
#    contributors may be used to endorse or promote products derived from this
#    software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#


# ============================================================================
# File I/O options
# ============================================================================

# For each file type, the following options are configurable:
#
#   io.<filetype>.skipIndexColumn1 = true|false
#   io.<filetype>.skipIndexColumn2 = true|false
#   io.<filetype>.compact = true|false
#
# skipIndexColumn1 - when true and the column contains enumerated values, the
#   deltas between indices will be stored instead of the raw value. When indices
#   are natirually stored in ascending order, this can substantially reduce the
#   file size.
#
# skipIndexColumn2 - when true and the column contains enumerated values, the
#   deltas between indices will be stored instead of the raw value. When indices
#   are natirually stored in ascending order, this can substantially reduce the
#   file size. Note that not all file types have a second enumerated column.
#
# compact - Non-compact files are flat, tab deliminated values, with one row per
#   record. It is sometimes the case that the first column for two or more rows
#   is identical. When compact is enabled the rows with an identical column1
#   value are agregated into the same record, without repeating the first column.
#   For example ((a,b,c),(a,d,e),(f,b,g)) becomes ((a,b,c,d,e),(f,b,g)). Note
#   that when compact=true, the software will still read non-compact files, but
#   the opposite is not true.
#


# The instances file is the raw input file for the thesaurus build, consisting
# of raw observations of entries and features co-occuring. Each record should
# consist of an entry and a feature string.
io.instances.skipIndexColumn1 = false
io.instances.skipIndexColumn2 = false
io.instances.compact = true

# The entries file is the frequency counts of all entries found in the instances
# file. Each record consists of an enumerated entry id with a frequency count.
io.entries.skipIndexColumn1 = true

# The features file is the frequency counts of all entries found in the
# instances file. Each record consists of an enumerated feature id with a
# frequency count.
io.features.skipIndexColumn1 = true


# The events file is accumulated frequency counts of all observation found in
# the instances files. Each record consists of an enumerated entry id, an
# enumerated feature id, and a frequency count.
io.events.skipIndexColumn1 = true
io.events.skipIndexColumn2 = true
io.events.compact = true


# The sims file contains the calculated similarity values between entries. Each
# record consists of a pair of enumerated entry ids with a similarity score.
io.sims.skipIndexColumn1 = false
io.sims.skipIndexColumn2 = true
io.sims.compact = true

# The neighbours file format is the same as sims, except that only the top K
# highest similarity pair for each base entry are recorded. In addition it
# sorted first in ascending order of base-entry, the in decending order of
# similarity, so the neighbour entries (column 2) are unordered; hense skip
# indexing is disabled.
io.neighbours.skipIndexColumn1 = false
io.neighbours.skipIndexColumn2 = false
io.neighbours.compact = true

